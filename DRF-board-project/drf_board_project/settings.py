"""
Django settings for drf_board_project project.

Generated by 'django-admin startproject' using Django 4.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
# from . import local_settings
import os


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = local_settings.SECRET_KEY
SECRET_KEY = 'django-insecure-+(76_gqo&70+_dpff0$r%xvk%wa*r*rnjb+r(3rvl42gqp6vt9'


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # Django Rest Framework
    'rest_framework',
    'rest_framework.authtoken', # 기본 토큰 인증 방식을 위한 app
    
    # apps
    'users',
    'posts',
    
    # other apps
    'corsheaders', # CORS 관련
    'django_filters', # 필터링 기능을 제공해주는 공식 패키지
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware', # CORS 관련. 맨 위쪽에 위치!
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# CORS 관련
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True

ROOT_URLCONF = 'drf_board_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'drf_board_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Rest Framework 추가 적용 옵션
REST_FRAMEWORK = {
    # 프로젝트의 인증 방식으로 토큰 방식을 사용하겠음
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ],
    # 아래 DEFAULT_FILTER_BACKENDS 옵션의 경우 해당 프로젝트의 기본 필터링 도구를 설치한 django_filters 패키지로 대체 하겠다는 옵션.
    # 이 옵션을 사용하면 이후에 django-filter 모듈을 뷰와 같은 코드에서 직접 불러오지 않아도 잘 적용됨. 단, 프로젝트 전역에 적용되므로 주의가 필요.
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
    ],
    # Pagination : 한 번의 API 요청으로 가져올 수 있는 데이터 수를 제한하는 기능.
    'DEFAULT_PAGINATION_CLASS':
        # 아래 사용한 PageNumberPagination 이외에도 다양한 Pagination 기능이 있음.(drf 공식 홈페이지/api-guide/pagination 참고)
        'rest_framework.pagination.PageNumberPagination',
        # 한 페이지에 보여질 데이터의 갯수를 3개로 제한함.
        'PAGE_SIZE':
            3,
}


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = '/media/' # 미디어 파일들이 담길 디렉토리 경로 지정
MEDIA_ROOT = os.path.join(BASE_DIR, 'media') # 루트로 설정

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
